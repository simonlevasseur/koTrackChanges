// koTrackChanges 1.0.0 | (c) 2014 Simon LeVasseur |  http://www.opensource.org/licenses/mit-license
!function(a){"use strict";"function"==typeof require&&"object"==typeof exports&&"object"==typeof module?a(require("ko"),require("underscore"),exports):"function"==typeof define&&define.amd?define(["ko","underscore","exports"],a):a(ko,_,ko.trackChanges={})}(function(a,b,c){"use strict";var d=c,e={};d.Group=function(c){var d=[];this.editables=a.observableArray([]),c&&(b.isArray(c)||a.isObservable(c)&&"push"in c||(c=[c]),a.utils.arrayForEach(a.unwrap(c),function(b){a.isObservable(b)&&(b.isDirty||b.extend({trackChanges:!0}),d.push(b))}),this.editables(d)),this.changes=a.computed(this.getChanges,this),this.isDirty=a.computed(this.getIsDirty,this)},d.Group.prototype={getChanges:function(){var b=[];return a.utils.arrayForEach(this.editables(),function(a){a.isDirty()&&b.push(a)}),b},getIsDirty:function(){return this.changes().length>0},commitAll:function(){a.utils.arrayForEach(this.editables(),function(a){a.commit()})},rollbackAll:function(){a.utils.arrayForEach(this.editables(),function(a){a.rollback()})},add:function(c){b.isArray(c)||a.isObservable(c)&&"push"in c||(c=[c]);var d=this.editables;a.utils.arrayForEach(a.unwrap(c),function(b){a.isObservable(b)&&(b.isDirty||b.extend({trackChanges:!0}),d.push(b))})},remove:function(c){b.isArray(c)||a.isObservable(c)&&"push"in c||(c=[c]),this.editables.removeAll(c)},dispose:function(){this.changes.dispose(),this.isDirty.dispose();for(var a in e)e.hasOwnProperty(a)&&e[a]===this&&delete e[a]}},d.getGroup=function(a){return e[a]},a.extenders.trackChanges=function(c,f){return c.oldValue=a.observable(c()),c.isDirty=a.computed(function(){return!f.onlyIf||f.onlyIf&&f.onlyIf.call(c)?!b.isEqual(c(),c.oldValue()):!1}),c.rollback=function(){this(this.oldValue())},c.commit=function(){this.oldValue(this())},("string"==typeof f||f instanceof String)&&(e[f]?e[f].editables.push(c):e[f]=new d.Group([c])),c}});